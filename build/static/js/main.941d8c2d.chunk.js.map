{"version":3,"sources":["Consts.js","Register.js","Session.js","Login.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","backendIP","timeLimit","isTimeLimited","numbers","letters","lettersWithComma","Register","state","user_id","fname","lname","gender","sexual_oreintation","race","profession","dob","status","registerStatus","checkIfCharsAreValid","e","validChars","i","target","value","length","includes","changeInput","String","_this","setState","Object","defineProperty","name","alert","msgMiddle","GLOBAL_VARS","change","sumbitForm","params","console","log","url","axios","get","then","response","result","data","catch","error","onSubmit","preventDefault","showRegister","_this2","this","react_default","a","createElement","className","onClick","class","type","min","max","placeholder","onChange","step","id","for","React","Component","Filler","props","transitionSmooth","chosenTransition","transition","style","width","percentage","background","color","ProgressBar","Session_Filler","Session","currImageSrc","currLocInSession","timeBefore","rating","timesUncertain","sessionStatus","isFinished","isLoggedIn","sessionType","showHello","progressBarPercent","sessionColor","progressBarTransition","tasks","localSessionData","lastImageIndexSession","hasUserClicked","preloadImages","imgs","preloadedImages","Image","src","showWaitingProgressBar","colorBefore","setTimeout","changeRating","newRating","setNewImage","imgIdx","Date","now","imagesPath","setNewSessionState","resetSessionState","hasFinishedSession","handleNextSession","clearInterval","progressInterval","sessionNum","nextSessionType","nextSessionColor","spanStyle","getSessionByType","setNewImageOrGetNextSession","startSessionWithSessionData","sessionData","percentOF4Seconds","setInterval","percent","newPercent","getSessionFromBackend","sessionId","sendRatingToBackend","rateResponse","toString","createRating","didSubmit","ratingParmas","d","ratingTimeStampWithTimeZoneOffset","getTime","getTimezoneOffset","split","userId","iterationId","onSubmitRating","startSessions","local","Math","random","restartSessions","refreshPage","window","location","reload","nextValue","prevValue","loggedUserId","Session_ProgressBar","build_default","starRatedColor","starHoverColor","onStarHover","bind","numberOfStars","Login","showLogin","event","currRating","onSubmitLogin","setLoggedIn","App","fields","hello","loggedIn","inputUserId","document","title","oncontextmenu","Function","onselectstart","Session_Session","Login_Login","Register_Register","onregistered","registered","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","concat","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.941d8c2d.chunk.js","sourcesContent":["const GLOBAL_VARS = {\r\n  backendIP: \"http://35.176.94.224:8080/\",\r\n  // backendIP: \"http://localhost:8080/\",\r\n  timeLimit: 4000,\r\n  isTimeLimited: true,\r\n\r\n  numbers: \"1234567890\",\r\n  letters: \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWQYZ`'-\",\r\n  lettersWithComma: \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWQYZ`'-,\"\r\n};\r\n\r\nmodule.exports = GLOBAL_VARS;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport GLOBAL_VARS from \"./Consts\";\r\nexport default class Register extends React.Component {\r\n  state = {\r\n    user_id: \"\",\r\n    fname: \"\",\r\n    lname: \"\",\r\n    gender: \"\",\r\n    sexual_oreintation: \"\",\r\n    race: \"\",\r\n    profession: \"\",\r\n    //sembiraben@gmail.com+\r\n    dob: \"1998\",\r\n    //sembiraben@gmail.com-\r\n    status: null,\r\n    registerStatus: 0\r\n  };\r\n\r\n  //sembiraben@gmail.com+\r\n  checkIfCharsAreValid = (e, validChars) => {\r\n    for (var i = 0; i < e.target.value.length; i++) {\r\n      if (!validChars.includes(e.target.value[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  //sembiraben@gmail.com-\r\n\r\n  //sembiraben@gmail.com+\r\n  changeInput = (e, length, validChars) => {\r\n    validChars = String(validChars);\r\n    if (\r\n      !this.checkIfCharsAreValid(e, validChars) &&\r\n      e.target.value.length != 0\r\n    ) {\r\n      var msgStart = \"Put only \";\r\n      var msgMiddle;\r\n      var msgEnd = \" in this field.\";\r\n      switch (validChars) {\r\n        case GLOBAL_VARS.numbers:\r\n          msgMiddle = \"numbers\";\r\n          break;\r\n        case GLOBAL_VARS.letters:\r\n          msgMiddle = \"letters, spaces or { ` , ' , - }\";\r\n          break;\r\n        case GLOBAL_VARS.lettersWithComma:\r\n          msgMiddle = \"letters, spaces, commas or { ` , ' , - }\";\r\n          break;\r\n      }\r\n      var msg = msgStart + msgMiddle + msgEnd;\r\n      alert(msg);\r\n    } else if (e.target.value.length <= length) {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      alert(\"Length should be \" + length + \".\");\r\n    }\r\n  };\r\n  //sembiraben@gmail.com-\r\n\r\n  change = e => {\r\n    //sembiraben@gmail.com+\r\n    if (e.target.name === \"user_id\") {\r\n      this.changeInput(e, 9, GLOBAL_VARS.numbers);\r\n    } else if (e.target.name === \"dob\") {\r\n      this.changeInput(e, 4, GLOBAL_VARS.numbers);\r\n    } else if (e.target.name === \"fname\" || e.target.name === \"lname\") {\r\n      this.changeInput(e, 30, GLOBAL_VARS.letters);\r\n    } else if (e.target.name === \"race\" || e.target.name === \"profession\") {\r\n      this.changeInput(e, 30, GLOBAL_VARS.lettersWithComma);\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n    //sembiraben@gmail.com-\r\n  };\r\n  sumbitForm = params => {\r\n    console.log(\"sumbitForm\");\r\n    console.log(params);\r\n    let url = GLOBAL_VARS.backendIP + \"reg\";\r\n    axios\r\n      .get(url, {\r\n        params\r\n      })\r\n      .then(response => {\r\n        // console.log(response);\r\n        // var res = JSON.parse(response);\r\n        let result = response.data;\r\n        console.log(\"response.data:\" + response.data);\r\n        switch (result) {\r\n          case 0:\r\n            this.setState({\r\n              status:\r\n                \"Welcome \" +\r\n                this.state.fname +\r\n                \"! \\nNow you can login with your ID: \" +\r\n                this.state.user_id,\r\n              registerStatus: 2\r\n            });\r\n            break;\r\n          case -1:\r\n            this.setState({\r\n              status: \"User named \" + this.state.fname + \" is already registerd\"\r\n            });\r\n            alert(\r\n              this.state.status +\r\n                \", choose one from the header and this popup..\"\r\n            );\r\n            break;\r\n          case -2:\r\n            this.setState({\r\n              status: \"One or more of the parameters are missing\"\r\n            });\r\n            alert(\r\n              this.state.status +\r\n                \", choose one from the header and this popup..\"\r\n            );\r\n            break;\r\n          default:\r\n            this.setState({\r\n              status: \"Unkown error occured\"\r\n            });\r\n            alert(\r\n              this.state.status +\r\n                \", choose one from the header and this popup..\"\r\n            );\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Failed :()\");\r\n        console.log(error.data);\r\n        this.setState({\r\n          status:\r\n            \"Error occured, Are one of the parameters are missing or incorrect?\"\r\n        });\r\n      });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    let params = this.state;\r\n    this.sumbitForm(params);\r\n  };\r\n  showRegister = e => {\r\n    this.setState({ registerStatus: 1 });\r\n    console.log(\"register clicked!\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.registerStatus === 0 && (\r\n          <button className=\"button\" onClick={e => this.showRegister(e)}>\r\n            Register\r\n          </button>\r\n        )}\r\n        <div className=\"registerForm\">\r\n          <h2 class=\"ERROR\">{this.state.status}</h2>\r\n          {this.state.registerStatus === 1 && (\r\n            <div className=\"regContainer\">\r\n              <h4>Please make sure to fill up all your details correctly</h4>\r\n              <form>\r\n                <div class=\"divTable\">\r\n                  <div class=\"divTableBody\">\r\n                    <div class=\"divTableRow\">\r\n                      <div className=\"divTableCell\">Your ID</div>\r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"user_id\"\r\n                          min=\"010000000\"\r\n                          max=\"999999999\"\r\n                          placeholder=\"ID\"\r\n                          value={this.state.user_id}\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">First Name</div>\r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          name=\"fname\"\r\n                          type=\"text\"\r\n                          placeholder=\"First Name\"\r\n                          value={this.state.fname}\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">Last Name</div>\r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          name=\"lname\"\r\n                          type=\"text\"\r\n                          placeholder=\"Last Name\"\r\n                          value={this.state.lname}\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">Year of Birth</div>\r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          name=\"dob\"\r\n                          type=\"number\"\r\n                          min=\"1900\"\r\n                          max=\"2010\"\r\n                          step=\"1\"\r\n                          value={this.state.dob}\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">Gender?</div>\r\n                      <div class=\"divTableCell\">\r\n                        <div className=\"radio-group\">\r\n                          <input\r\n                            id=\"option-one\"\r\n                            type=\"radio\"\r\n                            value=\"Male\"\r\n                            name=\"gender\"\r\n                            onChange={e => this.change(e)}\r\n                          />\r\n                          <label for=\"option-one\">Man</label>\r\n                          <input\r\n                            id=\"option-two\"\r\n                            type=\"radio\"\r\n                            value=\"Female\"\r\n                            name=\"gender\"\r\n                            onChange={e => this.change(e)}\r\n                          />\r\n                          <label for=\"option-two\">Woman</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* \r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Male\"\r\n                          name=\"gender\"\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                        Man\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Female\"\r\n                          name=\"gender\"\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                        Woman\r\n                      </div> */}\r\n\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">Like Women / Men?</div>\r\n                      <div class=\"divTableCell\">\r\n                        <div className=\"radio-group\">\r\n                          <input\r\n                            id=\"option-one1\"\r\n                            type=\"radio\"\r\n                            value=\"Women\"\r\n                            name=\"sexual_oreintation\"\r\n                            onChange={e => this.change(e)}\r\n                          />\r\n                          <label for=\"option-one1\">Woman</label>\r\n                          <input\r\n                            id=\"option-two2\"\r\n                            type=\"radio\"\r\n                            value=\"Men\"\r\n                            name=\"sexual_oreintation\"\r\n                            onChange={e => this.change(e)}\r\n                          />\r\n                          <label for=\"option-two2\">Man</label>\r\n                          <input\r\n                            id=\"option-three\"\r\n                            type=\"radio\"\r\n                            value=\"Both\"\r\n                            name=\"sexual_oreintation\"\r\n                            onChange={e => this.change(e)}\r\n                          />\r\n                          <label for=\"option-three\">Both!</label>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div class=\"divTableCell\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Women\"\r\n                          name=\"sexual_oreintation\"\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                        Women\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Men\"\r\n                          name=\"sexual_oreintation\"\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                        Men\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"Both\"\r\n                          name=\"sexual_oreintation\"\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                        Both!\r\n                      </div> */}\r\n                    </div>\r\n\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">Parents from?</div>\r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          name=\"race\"\r\n                          type=\"text\"\r\n                          placeholder=\"Poland, Iraq, Morroco, etc..\"\r\n                          value={this.state.race}\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"divTableRow\">\r\n                      <div class=\"divTableCell\">What do you do?</div>\r\n                      <div class=\"divTableCell\">\r\n                        <input\r\n                          name=\"profession\"\r\n                          type=\"text\"\r\n                          placeholder=\"Student/Lecturer/etc..\"\r\n                          value={this.state.profession}\r\n                          onChange={e => this.change(e)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"divTableRowCentered\">\r\n                  <button\r\n                    class=\"registerButton\"\r\n                    onClick={e => this.onSubmit(e)}\r\n                  >\r\n                    Click to Register\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport StarRatings from \"react-star-ratings\";\r\n// import { ProgressBar } from \"cjs-react-progressbar\";\r\nimport GLOBAL_VARS from \"./Consts\";\r\n//export default\r\n// class Foo extends React.Component {\r\n//   state = {\r\n//     rating: 0\r\n//   };\r\n\r\n// }\r\nconst Filler = props => {\r\n  //\"width 0.02s ease-in\";\r\n  let transitionHard = \"\";\r\n  let transitionSmooth = \"width \" + GLOBAL_VARS.timeLimit + \"ms ease-in\";\r\n  let chosenTransition =\r\n    props.transition == \"smooth\" ? transitionSmooth : transitionHard;\r\n  return (\r\n    <div\r\n      className=\"filler\"\r\n      style={{\r\n        width: props.percentage + \"%\",\r\n        background: props.color,\r\n        transition: chosenTransition\r\n      }}\r\n    />\r\n  );\r\n};\r\nconst ProgressBar = props => {\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <Filler\r\n        percentage={props.percentage}\r\n        color={props.color}\r\n        transition={props.transition}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default class Session extends React.Component {\r\n  state = {\r\n    user_id: null,\r\n    currImageSrc: \"\",\r\n    currLocInSession: 0,\r\n    timeBefore: 0,\r\n    rating: -1,\r\n    timesUncertain: -1,\r\n    sessionStatus: null,\r\n    isFinished: false,\r\n    isLoggedIn: false,\r\n    sessionType: null,\r\n    showHello: false,\r\n    progressBarPercent: 0,\r\n    sessionColor: null,\r\n    progressBarTransition: \"hard\"\r\n  };\r\n  tasks = [\"ATTRACTIVENESS\", \"WILLING_FOR_LOAN\"];\r\n  localSessionData = null;\r\n  lastImageIndexSession = -1;\r\n  hasUserClicked = false;\r\n  preloadImages = imgs => {\r\n    console.log(\"preloadImages \" + imgs.length);\r\n    this.preloadedImages = [imgs.length];\r\n    for (var i = 0; i < imgs.length; i++) {\r\n      this.preloadedImages[i] = new Image();\r\n      this.preloadedImages[i].src = imgs[i];\r\n    }\r\n    console.log(\"FINISHED LOADING!!!!!!!!!\");\r\n  };\r\n  showWaitingProgressBar = () => {\r\n    let colorBefore = this.state.sessionColor;\r\n    this.setState(\r\n      {\r\n        sessionColor: \"Black\",\r\n        progressBarPercent: 100,\r\n        progressBarTransition: \"smooth\"\r\n      },\r\n      () =>\r\n        setTimeout(() => {\r\n          this.setState({\r\n            sessionColor: colorBefore,\r\n            progressBarTransition: \"hard\",\r\n            progressBarPercent: 0\r\n          });\r\n        }, GLOBAL_VARS.timeLimit - 2)\r\n    );\r\n  };\r\n\r\n  changeRating = (newRating, name) => {\r\n    this.setState({\r\n      timesUncertain: this.state.timesUncertain + 1,\r\n      rating: newRating\r\n    });\r\n  };\r\n\r\n  setNewImage = imgIdx => {\r\n    console.log(\"Showing Image \" + imgIdx + \"/\" + this.lastImageIndexSession);\r\n    this.setState(\r\n      {\r\n        currLocInSession: imgIdx,\r\n        timeBefore: Date.now(),\r\n        currImageSrc: this.localSessionData.imagesPath[imgIdx],\r\n        rating: -1,\r\n        timesUncertain: -1,\r\n        progressBarPercent: 0\r\n      },\r\n      () => {\r\n        // after the image has been changed, enable clicking again\r\n        this.hasUserClicked = false;\r\n      }\r\n    );\r\n  };\r\n  setNewSessionState = () => {\r\n    this.setState({\r\n      sessionType: this.localSessionData.sessionType,\r\n      sessionStatus: \"\"\r\n    });\r\n  };\r\n  resetSessionState = () => {\r\n    this.localSessionData = null;\r\n    this.lastImageIndexSession = -1;\r\n    this.setState({\r\n      currImageSrc: null,\r\n      sessionType: null,\r\n      progressBarPercent: 0,\r\n      currLocInSession: -1\r\n    });\r\n  };\r\n  hasFinishedSession = () => {\r\n    if (this.state.currLocInSession === this.lastImageIndexSession) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  handleNextSession = () => {\r\n    // reset interval\r\n    if (GLOBAL_VARS.isTimeLimited) {\r\n      clearInterval(this.progressInterval);\r\n      console.log(\"clearInterval(this.progressInterval)\");\r\n    }\r\n    this.sessionNum += 1;\r\n    if (this.sessionNum < 2) {\r\n      console.log(\"FINISHED SESSION\");\r\n      let nextSessionType =\r\n        this.state.sessionType === this.tasks[0]\r\n          ? this.tasks[1]\r\n          : this.tasks[0];\r\n      let nextSessionColor =\r\n        this.state.sessionColor === \"green\" ? \"red\" : \"green\";\r\n      let spanStyle = { color: nextSessionColor };\r\n      this.resetSessionState();\r\n      this.setState({\r\n        sessionStatus: (\r\n          <div>\r\n            Nice! you have done great!\r\n            <br />\r\n            The Next session is:\r\n            <br />\r\n            <span style={spanStyle}>{nextSessionType}</span>\r\n          </div>\r\n        )\r\n      });\r\n      this.showWaitingProgressBar();\r\n      setTimeout(() => {\r\n        // continue for second round\r\n        this.getSessionByType(nextSessionType);\r\n        this.setState({\r\n          sessionType: nextSessionType,\r\n          sessionColor: nextSessionColor,\r\n          progressBarPercent: 0\r\n        });\r\n      }, GLOBAL_VARS.timeLimit);\r\n    } else {\r\n      this.resetSessionState();\r\n      this.setState({\r\n        sessionStatus: \"Finished Session. Thank you!\",\r\n        isLoggedIn: false,\r\n        isFinished: true\r\n      });\r\n    }\r\n  };\r\n  setNewImageOrGetNextSession = () => {\r\n    this.hasFinishedSession()\r\n      ? this.handleNextSession()\r\n      : this.setNewImage(this.state.currLocInSession + 1);\r\n  };\r\n  startSessionWithSessionData = sessionData => {\r\n    this.localSessionData = sessionData; //update local session data\r\n    this.lastImageIndexSession = this.localSessionData.imagesPath.length - 1;\r\n    console.log(\r\n      \"SessionType:\",\r\n      this.localSessionData.sessionType,\r\n      \" ;#images:\",\r\n      this.localSessionData.imagesPath.length\r\n    );\r\n    this.setNewImage(0);\r\n    this.setNewSessionState();\r\n    let percentOF4Seconds = GLOBAL_VARS.timeLimit / 4;\r\n    if (GLOBAL_VARS.isTimeLimited) {\r\n      this.progressInterval = setInterval(() => {\r\n        let percent = this.state.progressBarPercent;\r\n        // if need to skip interval\r\n        if (this.state.sessionType != null) {\r\n          if (percent === 100) {\r\n            // change pic\r\n            this.setNewImageOrGetNextSession();\r\n          } else {\r\n            let newPercent = percent + 25;\r\n            // let newPercent = 50;\r\n            console.log(\"setInterval triggered, val:\", newPercent);\r\n            this.setState({\r\n              progressBarPercent: newPercent\r\n            });\r\n          }\r\n        }\r\n      }, percentOF4Seconds);\r\n    }\r\n  };\r\n\r\n  getSessionFromBackend = params => {\r\n    let url = GLOBAL_VARS.backendIP + \"sess\";\r\n    axios\r\n      .get(url, { params })\r\n      .then(result => {\r\n        let sessionData = result.data;\r\n        if (sessionData.sessionId === -1) {\r\n          this.setState({\r\n            sessionStatus: \"User is not registered, re-enter id\",\r\n            user_id: -1\r\n          });\r\n        } else {\r\n          console.log(\"SessionId: \", sessionData.sessionId);\r\n          this.preloadImages(sessionData.imagesPath); // preloading images\r\n          if (!this.state.isLoggedIn) {\r\n            //first time showHello\r\n            this.setState({ isLoggedIn: true });\r\n            console.log(\"then: this.state.user_id:\", this.state.user_id);\r\n            this.showWaitingProgressBar(GLOBAL_VARS.timeLimit - 3);\r\n            setTimeout(() => {\r\n              this.startSessionWithSessionData(sessionData);\r\n              this.setState({\r\n                showHello: false\r\n              });\r\n            }, GLOBAL_VARS.timeLimit - 2);\r\n            this.setState({\r\n              showHello: true\r\n            });\r\n          } else {\r\n            this.startSessionWithSessionData(sessionData);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Failed :()\");\r\n        this.setState({\r\n          sessionStatus: \"could not reach backend 404\"\r\n        });\r\n      });\r\n  };\r\n  getSessionByType = type => {\r\n    let params = {};\r\n    params[\"user_id\"] = this.state.user_id;\r\n    params[\"type\"] = type;\r\n    console.log(\r\n      \"getSessionByType: user_id=\",\r\n      params[\"user_id\"],\r\n      \" ; type=\",\r\n      params[\"type\"]\r\n    );\r\n    this.getSessionFromBackend(params);\r\n  };\r\n\r\n  sendRatingToBackend = params => {\r\n    let url = GLOBAL_VARS.backendIP + \"rate\";\r\n    axios\r\n      .get(url, {\r\n        params\r\n      })\r\n      .then(rateResponse => {\r\n        console.log(\r\n          \"rateResponse: \",\r\n          rateResponse.data,\r\n          \" imgNum: \",\r\n          this.state.currLocInSession\r\n        );\r\n        this.setNewImageOrGetNextSession();\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error in sendRatingToBackend\");\r\n        this.setState({ sessionStatus: error.toString() });\r\n      });\r\n  };\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  ///\r\n  // UPDATE BACKEND AND FRONTEND FOR THIS, CHANGE OR ADD NEW PARAMETER - DID SUBMIT HIS RATING?\r\n  createRating = didSubmit => {\r\n    let ratingParmas = {};\r\n    let d = new Date();\r\n    let ratingTimeStampWithTimeZoneOffset =\r\n      d.getTime() - d.getTimezoneOffset() * 60 * 1000;\r\n    ratingParmas[\"s\"] = this.state.sessionType;\r\n    ratingParmas[\"photoId\"] = this.state.currImageSrc.split(\"/\")[\r\n      this.state.currImageSrc.split(\"/\").length - 1\r\n    ];\r\n    ratingParmas[\"user_id\"] = this.localSessionData.userId;\r\n    ratingParmas[\"ratingValue\"] = this.state.rating;\r\n    ratingParmas[\"ratingUUID\"] = ratingTimeStampWithTimeZoneOffset;\r\n    ratingParmas[\"session\"] = this.localSessionData.sessionId;\r\n    ratingParmas[\"iteration\"] = this.localSessionData.iterationId;\r\n    ratingParmas[\"locationInSession\"] = this.state.currLocInSession;\r\n    ratingParmas[\"timeTook\"] = Date.now() - this.state.timeBefore;\r\n    ratingParmas[\"timesUncertain\"] = this.state.timesUncertain;\r\n    ratingParmas[\"phonePosition\"] = 0;\r\n    console.log(\r\n      \"sentRating- photoID:\",\r\n      ratingParmas[\"photoId\"],\r\n      \" rating:\",\r\n      this.state.rating\r\n    );\r\n    return ratingParmas;\r\n  };\r\n  onSubmitRating = e => {\r\n    e.preventDefault();\r\n    console.log(\"onSubmitRating: hasUserClicked:\", this.hasUserClicked);\r\n    if (\r\n      this.localSessionData === null ||\r\n      this.hasUserClicked ||\r\n      this.state.rating === -1\r\n    ) {\r\n      console.log(\"this.state.rating === -1\");\r\n      return;\r\n    }\r\n    this.hasUserClicked = true;\r\n    this.sendRatingToBackend(this.createRating(true));\r\n  };\r\n  onStarHover(nextValue, prevValue, name) {\r\n    this.setState({ rating: nextValue });\r\n  }\r\n  startSessions = userId => {\r\n    console.log(\"startSessions\" + userId);\r\n    let local = null,\r\n      sessionColor;\r\n    if (Math.random() > 0.5) {\r\n      local = this.tasks[0];\r\n      sessionColor = \"red\";\r\n    } else {\r\n      local = this.tasks[1];\r\n      sessionColor = \"green\";\r\n    }\r\n    let params = {};\r\n    params[\"user_id\"] = userId;\r\n    params[\"type\"] = local;\r\n    this.setState({\r\n      user_id: userId,\r\n      sessionColor: sessionColor,\r\n      isFinished: false\r\n    });\r\n    this.sessionNum = 0;\r\n    this.getSessionFromBackend(params);\r\n  };\r\n  restartSessions = e => {\r\n    console.log(\"restartSessions\" + this.state.user_id);\r\n    this.startSessions(this.state.user_id);\r\n  };\r\n  refreshPage = e => {\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"sessionHolder\">\r\n        {this.state.user_id == null &&\r\n          this.startSessions(this.props.loggedUserId)}\r\n        <div className=\"progressBar\">\r\n          <ProgressBar\r\n            percentage={this.state.progressBarPercent}\r\n            color={this.state.sessionColor}\r\n            transition={this.state.progressBarTransition}\r\n          />\r\n        </div>\r\n        <h3>{this.state.sessionStatus}</h3>\r\n        {this.state.user_id === -1 && (\r\n          <button className=\"button\" onClick={e => this.refreshPage(e)}>\r\n            Try again\r\n          </button>\r\n        )}\r\n        {this.state.isFinished && <h4>Click on the button below for more!</h4>}\r\n\r\n        {this.state.showHello ? (\r\n          <h1>Hello {this.state.user_id}!</h1>\r\n        ) : (\r\n          !this.state.isFinished &&\r\n          this.state.sessionType && (\r\n            <div className=\"innerSessionHolder\">\r\n              <div className=\"taskTitle\">\r\n                {!this.state.isFinished &&\r\n                this.state.sessionType === \"ATTRACTIVENESS\" ? (\r\n                  <h2 style={{ color: \"red\" }}>Attractive?</h2>\r\n                ) : (\r\n                  <h2 style={{ color: \"green\" }}>Would you give a loan?</h2>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"imgContainer\">\r\n                {this.state.currImageSrc && (\r\n                  <img\r\n                    name=\"currImage\"\r\n                    src={this.state.currImageSrc}\r\n                    className=\"displayedImage\"\r\n                  />\r\n                  //                   $(\"<img/>\")\r\n                  //     .on('load', function() { console.log(\"image loaded correctly\"); })  RUN A FUNCTION TO START SESSION.\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"starSubmitContainer\">\r\n                <StarRatings\r\n                  rating={this.state.rating}\r\n                  starRatedColor=\"gold\"\r\n                  starHoverColor=\"gold\"\r\n                  changeRating={this.changeRating}\r\n                  onStarHover={this.onStarHover.bind(this)}\r\n                  numberOfStars={5}\r\n                  name=\"rating\"\r\n                />\r\n\r\n                <form>\r\n                  <button\r\n                    onClick={e => this.onSubmitRating(e)}\r\n                    className={\r\n                      this.state.sessionType === \"ATTRACTIVENESS\"\r\n                        ? \"submitRatingButtonA\"\r\n                        : \"submitRatingButtonL\"\r\n                    }\r\n                  >\r\n                    Rate!\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n        {this.state.isFinished && (\r\n          <button className=\"button\" onClick={e => this.restartSessions(e)}>\r\n            Rate more!\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    user_id: \"\",\r\n    isFinished: false,\r\n    isLoggedIn: false,\r\n    sessionType: null,\r\n    showLogin: false\r\n  };\r\n\r\n  change = event => {\r\n    var goodChars = \"0123456789\";\r\n    if (\r\n      goodChars.includes(event.target.value[event.target.value.length - 1]) ||\r\n      event.target.value.length == 0\r\n    ) {\r\n      this.setState({\r\n        user_id: event.target.value,\r\n        currRating: event.target.value\r\n      });\r\n    }\r\n  };\r\n  onSubmitLogin = e => {\r\n    e.preventDefault();\r\n\r\n    let params = {};\r\n    params[\"user_id\"] = this.state.user_id;\r\n    // this.getSessionByType(local);\r\n    this.props.setLoggedIn(this.state.user_id);\r\n  };\r\n\r\n  showLogin = e => {\r\n    this.setState({ showLogin: true });\r\n    console.log(\"Login clicked!\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div name=\"holder\">\r\n        {this.state.showLogin ? (\r\n          <div name=\"login\">\r\n            <form>\r\n              <input\r\n                name=\"user_id\"\r\n                placeholder=\"ID\"\r\n                min=\"010000000\"\r\n                max=\"999999999\"\r\n                value={this.state.user_id}\r\n                onChange={e => this.change(e)}\r\n              />\r\n              <button className=\"button\" onClick={e => this.onSubmitLogin(e)}>\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <button className=\"button\" onClick={e => this.showLogin(e)}>\r\n            Login\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Register from \"./Register\";\r\nimport Session from \"./Session\";\r\nimport Login from \"./Login\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    document.title = \"Perah\";\r\n  }\r\n  state = {\r\n    fields: {},\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    hello: true\r\n  };\r\n  loggedIn = inputUserId => {\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userId: inputUserId\r\n    });\r\n    console.log(\"CLICKED ON SUBMIT from login!\" + inputUserId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <script type=\"text/javascript\">\r\n          {(document.oncontextmenu = new Function(\"return false;\"))}\r\n          {(document.onselectstart = new Function(\"return false;\"))}\r\n        </script>\r\n        <div className=\"noselect\">\r\n          <div className=\"disabledrag\">\r\n            <div className=\"app-container\">\r\n              {!this.state.isLoggedIn ? (\r\n                <div className=\"TOP_login\">\r\n                  <h1>Welcome to Perah App!</h1>\r\n                  <h2>Login or register to start</h2>\r\n                  <div className=\"loginRegisterContainer\">\r\n                    <Login\r\n                      setLoggedIn={inputUserId => this.loggedIn(inputUserId)}\r\n                    />\r\n                    <br />\r\n                    <Register\r\n                      onregistered={inputUserId => this.registered(inputUserId)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Session loggedUserId={this.state.userId} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}